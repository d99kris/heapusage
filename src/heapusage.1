.\" DO NOT MODIFY THIS FILE!  It was generated by help2man.
.TH HEAPUSAGE "1" "June 2024" "heapusage v2.09" "User Commands"
.SH NAME
heapusage \- find memory leaks in applications
.SH SYNOPSIS
.B heapusage
[\fI\,-d\/\fR] [\fI\,-m minsize\/\fR] [\fI\,-n\/\fR] [\fI\,-o path\/\fR] [\fI\,-t tools\/\fR] \fI\,PROG \/\fR[\fI\,ARGS\/\fR..]
.br
.B heapusage
\fI\,--help\/\fR
.br
.B heapusage
\fI\,--version\/\fR
.SH DESCRIPTION
Heapusage is a light\-weight tool for finding heap memory errors in
applications.
.SH OPTIONS
.TP
\fB\-d\fR
debug mode, running program through debugger
.TP
\fB\-m\fR <minsize>
min alloc size to enable analysis for (default 0)
.TP
\fB\-n\fR
no symbol lookup (faster)
.TP
\fB\-o\fR <path>
write output to specified file path, instead of stderr
.TP
\fB\-t\fR <tools>
analysis tools to use (default "leak")
.TP
PROG
program to run and analyze
.TP
[ARGS]
optional arguments to the program
.TP
\fB\-h\fR,\-\-help
display this help and exit
.TP
\fB\-v\fR,\-\-version
output version information and exit
.SS "Supported tools (for option -t):"
.TP
all
enables all supported tools below
.TP
double\-free
detect free'ing of buffers already free'd
.TP
leak
detect memory allocations never free'd
.TP
overflow
detect buffer overflows, i.e. access beyond
allocated memory
.TP
use\-after\-free
detect access to free'd memory buffers
.SH EXAMPLES
heapusage \-t leak,overflow \-m 2048 ./ex001
.IP
analyze heap allocations of minimum 2048 bytes for leaks and overflows.
.PP
heapusage \-t all \-m 0 ./ex002
.IP
analyze heap allocations of any size with all tools.
.SH AUTHOR
Written by Kristofer Berggren
.SH "REPORTING BUGS"
Report bugs at https://github.com/d99kris/heapusage
.SH COPYRIGHT
Copyright \(co 2017\-2024 Kristofer Berggren
.PP
heapusage is distributed under the BSD 3\-Clause license.
